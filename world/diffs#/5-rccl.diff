--- Arch PKGBUILD
+++ Artix PKGBUILD
@@ -1,48 +1,30 @@
 
 pkgname=rccl
-pkgver=6.3.3
+pkgver=6.0.2
 pkgrel=1
 pkgdesc="ROCm Communication Collectives Library"
 arch=('x86_64')
 url='https://rocm.docs.amd.com/projects/rccl/en/latest/index.html'
 license=('BSD-3-Clause')
-depends=('rocm-core' 'glibc' 'gcc-libs' 'hip-runtime-amd' 'rocm-smi-lib')
-makedepends=('git' 'cmake' 'rocm-cmake' 'hipify-clang' 'python')
-source=(
-  "${pkgname}::git+https://github.com/ROCm/rccl#tag=rocm-$pkgver"
-  "${pkgname}-json::git+https://github.com/nlohmann/json.git"
-  "${pkgname}-mscclpp::git+https://github.com/microsoft/mscclpp.git"
-)
-sha256sums=('91156dfb8f173fde9ba10caf22150017528e3a8f374a4653af0588cae1419fe8'
-            'SKIP'
-            'SKIP')
+depends=('rocm-core' 'glibc' 'gcc-libs' 'hip' 'rocm-smi-lib')
+makedepends=('cmake' 'rocm-cmake' 'hipify-clang' 'python')
+_git='https://github.com/ROCm/rccl'
+source=("$pkgname-$pkgver.tar.gz::$_git/archive/rocm-$pkgver.tar.gz")
+sha256sums=('5c8495acba3d620b751e729d1157e7b4eea8f5e5692c50ce47c5204d3dfd443c')
 options=(!lto)
-
-prepare() {
-  cd "$pkgname"
-  git submodule init
-
-  git config submodule."ext-src/json".url "${srcdir}/${pkgname}"-json
-  git config submodule."ext-src/mscclpp".url "${srcdir}/${pkgname}"-mscclpp
-
-  git -c protocol.file.allow=always submodule update --init --recursive
-}
+_dirname="$(basename $_git)-$(basename ${source[0]} .tar.gz)"
 
 build() {
   export HIPCC_COMPILE_FLAGS_APPEND="-parallel-jobs=$(nproc)"
   export HIPCC_LINK_FLAGS_APPEND="-parallel-jobs=$(nproc)"
-  export CXX=/opt/rocm/llvm/bin/amdclang++
-  export CC=/opt/rocm/llvm/bin/amdclang
-  CXXFLAGS+=" -fcf-protection=none"
   local cmake_args=(
     -Wno-dev
-    -S "$pkgname"
+    -S "$_dirname"
     -B build
     -D CMAKE_BUILD_TYPE=None
-    -D CMAKE_TOOLCHAIN_FILE="$srcdir/$pkgname"/toolchain-linux.cmake
+    -D CMAKE_CXX_COMPILER=/opt/rocm/bin/hipcc
+    -D CMAKE_CXX_FLAGS="${CXXFLAGS} -fcf-protection=none"
     -D CMAKE_INSTALL_PREFIX=/opt/rocm
-    -D ENABLE_MSCCL_KERNEL=OFF
-    -D ENABLE_MSCCLPP=OFF
   )
   cmake "${cmake_args[@]}"
   cmake --build build
@@ -51,5 +33,5 @@
 package() {
   DESTDIR="$pkgdir" cmake --install build
 
-  install -Dm644 "$srcdir/$pkgname/LICENSE.txt" "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
+  install -Dm644 "$srcdir/$_dirname/LICENSE.txt" "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
 }


############# Stripped diff below #################

--- arch_depends
+++ artix_depends
@@ -1,8 +1,7 @@
 cmake
 gcc-libs
-git
 glibc
-hip-runtime-amd
+hip
 hipify-clang
 python
 rocm-cmake

--- Arch PKGBUILD
+++ Artix PKGBUILD
@@ -1,25 +1,14 @@
-prepare() {
-cd "$pkgname"
-git submodule init
-git config submodule."ext-src/json".url "${srcdir}/${pkgname}"-json
-git config submodule."ext-src/mscclpp".url "${srcdir}/${pkgname}"-mscclpp
-git -c protocol.file.allow=always submodule update --init --recursive
-}
 build() {
 export HIPCC_COMPILE_FLAGS_APPEND="-parallel-jobs=$(nproc)"
 export HIPCC_LINK_FLAGS_APPEND="-parallel-jobs=$(nproc)"
-export CXX=/opt/rocm/llvm/bin/amdclang++
-export CC=/opt/rocm/llvm/bin/amdclang
-CXXFLAGS+=" -fcf-protection=none"
 local cmake_args=(
 -Wno-dev
--S "$pkgname"
+-S "$_dirname"
 -B build
 -D CMAKE_BUILD_TYPE=None
--D CMAKE_TOOLCHAIN_FILE="$srcdir/$pkgname"/toolchain-linux.cmake
+-D CMAKE_CXX_COMPILER=/opt/rocm/bin/hipcc
+-D CMAKE_CXX_FLAGS="${CXXFLAGS} -fcf-protection=none"
 -D CMAKE_INSTALL_PREFIX=/opt/rocm
--D ENABLE_MSCCL_KERNEL=OFF
--D ENABLE_MSCCLPP=OFF
 )
 cmake "${cmake_args[@]}"
 cmake --build build
