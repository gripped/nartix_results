--- Arch PKGBUILD
+++ Artix PKGBUILD
@@ -1,63 +1,67 @@
 
 pkgname=directx-shader-compiler
-pkgver=1.8.2505.1
+pkgdesc="A compiler for HLSL to DXIL (DirectX Intermediate Language)."
+pkgver=1.8.2502
 pkgrel=1
-pkgdesc="Compiler for HLSL to DXIL (DirectX Intermediate Language)"
+arch=('x86_64')
 url="https://github.com/microsoft/DirectXShaderCompiler"
-arch=(x86_64)
-license=(BSD-3-Clause)
-depends=(
-  gcc-libs
-  glibc
-)
-makedepends=(
-  clang
-  cmake
-  git
-  libxml2
-  ninja
-  python
-)
-source=(
-  "$pkgname::git+$url#tag=v${pkgver}"
-  "directx-headers::git+https://github.com/microsoft/DirectX-Headers"
-  "git+https://github.com/KhronosGroup/SPIRV-Headers"
-  "git+https://github.com/KhronosGroup/SPIRV-Tools"
-)
-b2sums=('3335d42eee2baa254a377c8e4273bd623374ddef12befb675f22018801c906fd70ebcf60cd289cefa33a6b4edba85c13f90a4f881f28306682e2661330da1c68'
-        'SKIP'
-        'SKIP'
-        'SKIP')
+license=('custom')
+depends=('ncurses')
+makedepends=('git' 'cmake' 'ninja' 'python')
+options=(!lto)
+source=("${pkgname}::git+https://github.com/microsoft/DirectXShaderCompiler.git#tag=v${pkgver}"
+        "${pkgname}-DirectX-Headers::git+https://github.com/microsoft/DirectX-Headers.git"
+        "${pkgname}-SPIRV-Headers::git+https://github.com/KhronosGroup/SPIRV-Headers"
+        "${pkgname}-SPIRV-Tools::git+https://github.com/KhronosGroup/SPIRV-Tools"
+        "${pkgname}-effcee::git+https://github.com/google/effcee"
+        "${pkgname}-googletest::git+https://github.com/google/googletest"
+        "${pkgname}-re2::git+https://github.com/google/re2")
+sha256sums=('9b5cc68c2a7df5fc16fac3c2223d18f3bd151f4c75559f58a015a3c63f154a3b'
+            'SKIP'
+            'SKIP'
+            'SKIP'
+            'SKIP'
+            'SKIP'
+            'SKIP')
 
 prepare() {
-  cd $pkgname
+  cd "${pkgname}"
 
   git submodule init
-  git submodule set-url external/DirectX-Headers "$srcdir/directx-headers"
-  git submodule set-url external/SPIRV-Headers "$srcdir/SPIRV-Headers"
-  git submodule set-url external/SPIRV-Tools "$srcdir/SPIRV-Tools"
-  git -c protocol.file.allow=always -c protocol.allow=never submodule update
+
+  git config submodule."external/DirectX-Headers".url "${srcdir}/${pkgname}"-DirectX-Headers
+  git config submodule."external/SPIRV-Headers".url "${srcdir}/${pkgname}"-SPIRV-Headers
+  git config submodule."external/SPIRV-Tools".url "${srcdir}/${pkgname}"-SPIRV-Tools
+  git config submodule."external/effcee".url "${srcdir}/${pkgname}"-effcee
+  git config submodule."external/googletest".url "${srcdir}/${pkgname}"-googletest
+  git config submodule."external/re2".url "${srcdir}/${pkgname}"-re2
+
+  git -c protocol.file.allow=always submodule update
 }
 
 build() {
-  local cmake_options=(
-    -C $pkgname/cmake/caches/PredefinedParams.cmake
-    -D CMAKE_BUILD_TYPE=None
-    -D CMAKE_INSTALL_PREFIX=/usr
-    -D CMAKE_INSTALL_SYSCONFDIR=/etc
-    -D CMAKE_SKIP_INSTALL_RPATH=ON
-    -D HLSL_INCLUDE_TESTS=OFF
-    -D HLSL_OFFICIAL_BUILD=ON
-    -D LLVM_BUILD_TOOLS=OFF
-    -D LLVM_INCLUDE_TESTS=OFF
-  )
+  cd "${pkgname}"
 
-  cmake -B build -S $pkgname -G Ninja "${cmake_options[@]}"
+  cmake -B build -S . -G Ninja \
+    -C cmake/caches/PredefinedParams.cmake \
+    -DCMAKE_BUILD_TYPE=Debug \
+    -DLLVM_ENABLE_LTO=False
+
   cmake --build build
 }
 
 package() {
-  DESTDIR="$pkgdir" cmake --build build --target install-distribution
-  install -Dm644 $pkgname/LICENSE.TXT -t "$pkgdir/usr/share/licenses/$pkgname"
+  cd "${pkgname}"
+
+  install -m755 -d "${pkgdir}"/usr/bin
+  install -m755 -d "${pkgdir}"/usr/lib
+  install -m755 -d "${pkgdir}"/usr/include
+  install -m755 -d "${pkgdir}"/usr/share/licenses/${pkgname}
+
+  install build/bin/dxc "${pkgdir}"/usr/bin/
+  cp build/lib/*.so* "${pkgdir}"/usr/lib/
+  cp -r include/dxc "${pkgdir}"/usr/include/
+
+  install LICENSE.TXT "${pkgdir}"/usr/share/licenses/${pkgname}/
+  install ThirdPartyNotices.txt "${pkgdir}"/usr/share/licenses/${pkgname}
 }
-


############# Stripped diff below #################

--- arch_depends
+++ artix_depends
@@ -1,8 +1,5 @@
-clang
 cmake
-gcc-libs
 git
-glibc
-libxml2
+ncurses
 ninja
 python

--- Arch PKGBUILD
+++ Artix PKGBUILD
@@ -1,23 +1,19 @@
 prepare() {
-cd $pkgname
+cd "${pkgname}"
 git submodule init
-git submodule set-url external/DirectX-Headers "$srcdir/directx-headers"
-git submodule set-url external/SPIRV-Headers "$srcdir/SPIRV-Headers"
-git submodule set-url external/SPIRV-Tools "$srcdir/SPIRV-Tools"
-git -c protocol.file.allow=always -c protocol.allow=never submodule update
+git config submodule."external/DirectX-Headers".url "${srcdir}/${pkgname}"-DirectX-Headers
+git config submodule."external/SPIRV-Headers".url "${srcdir}/${pkgname}"-SPIRV-Headers
+git config submodule."external/SPIRV-Tools".url "${srcdir}/${pkgname}"-SPIRV-Tools
+git config submodule."external/effcee".url "${srcdir}/${pkgname}"-effcee
+git config submodule."external/googletest".url "${srcdir}/${pkgname}"-googletest
+git config submodule."external/re2".url "${srcdir}/${pkgname}"-re2
+git -c protocol.file.allow=always submodule update
 }
 build() {
-local cmake_options=(
--C $pkgname/cmake/caches/PredefinedParams.cmake
--D CMAKE_BUILD_TYPE=None
--D CMAKE_INSTALL_PREFIX=/usr
--D CMAKE_INSTALL_SYSCONFDIR=/etc
--D CMAKE_SKIP_INSTALL_RPATH=ON
--D HLSL_INCLUDE_TESTS=OFF
--D HLSL_OFFICIAL_BUILD=ON
--D LLVM_BUILD_TOOLS=OFF
--D LLVM_INCLUDE_TESTS=OFF
-)
-cmake -B build -S $pkgname -G Ninja "${cmake_options[@]}"
+cd "${pkgname}"
+cmake -B build -S . -G Ninja \
+-C cmake/caches/PredefinedParams.cmake \
+-DCMAKE_BUILD_TYPE=Debug \
+-DLLVM_ENABLE_LTO=False
 cmake --build build
 }
