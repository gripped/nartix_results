--- Arch PKGBUILD
+++ Artix PKGBUILD
@@ -1,40 +1,49 @@
 
 pkgname=nushell
-pkgver=0.108.0
+pkgver=0.88.1
+_commit=fd56768fdcc1acbebcb75745600fc7419f72833d
 pkgrel=1
 pkgdesc='A new type of shell'
-arch=(x86_64)
+arch=('x86_64')
 url='https://www.nushell.sh'
-license=(MIT)
+license=('MIT')
 depends=(
-  curl
-  glibc
-  gcc-libs
-  libcrypto.so
-  libssl.so
-  zlib
+  'glibc'
+  'gcc-libs'
+  'libcrypto.so'
+  'libssl.so'
+  'zlib'
 )
-makedepends=(rust git)
-checkdepends=(procps-ng)
+makedepends=('cargo' 'git')
 install=nushell.install
-source=("git+https://github.com/nushell/nushell.git#tag=$pkgver")
-sha512sums=('e0ba4294808e78d59be488335d038ad82e7b848f519f53acfb1a88ef673484ae53345e065c5c1a798e62145fdbe47d16da0dbbaa9bc092493638bd9f3fbb5ef6')
-b2sums=('8dd093bea682be1dafcc11f97bcb1e30e4018c29974333eb52e897e7c86a6af566d58bbda674673d7004ec2f79288a90d86331c7b1a8b8ae0859aadd248788b1')
+source=("git+https://github.com/nushell/nushell.git#commit=$_commit")
+sha256sums=('SKIP')
+
+pkgver() {
+  cd "$pkgname"
+
+  git describe --tags | sed 's/^v//'
+}
 
 prepare() {
   cd "$pkgname"
 
-  cargo fetch --locked --target "$(rustc -vV | sed -n 's/host: //p')"
+  cargo fetch --locked --target "$CARCH-unknown-linux-gnu"
 }
 
 build() {
   cd "$pkgname"
 
-  CFLAGS+=' -ffat-lto-objects'
+  CFLAGS+=" -ffat-lto-objects"
 
-  cargo build --release --frozen --workspace
+  cargo build --release --frozen --workspace --features=extra,dataframe
 }
 
+check() {
+  cd "$pkgname"
+
+  cargo test --frozen --workspace --features=extra,dataframe
+}
 
 package() {
   cd "$pkgname"


############# Stripped diff below #################

--- arch_depends
+++ artix_depends
@@ -1,8 +1,7 @@
-curl
+cargo
 gcc-libs
 git
 glibc
 libcrypto.so
 libssl.so
-rust
 zlib

--- Arch PKGBUILD
+++ Artix PKGBUILD
@@ -1,9 +1,9 @@
 prepare() {
 cd "$pkgname"
-cargo fetch --locked --target "$(rustc -vV | sed -n 's/host: //p')"
+cargo fetch --locked --target "$CARCH-unknown-linux-gnu"
 }
 build() {
 cd "$pkgname"
-CFLAGS+=' -ffat-lto-objects'
-cargo build --release --frozen --workspace
+CFLAGS+=" -ffat-lto-objects"
+cargo build --release --frozen --workspace --features=extra,dataframe
 }
