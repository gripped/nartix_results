--- Arch PKGBUILD
+++ Artix PKGBUILD
@@ -1,50 +1,46 @@
-
 pkgname=github-cli
-pkgver=2.48.0
+pkgver=2.45.0
 pkgrel=2
-pkgdesc="The GitHub CLI"
+pkgdesc="GitHub's official command line tool"
 arch=("x86_64")
-url="https://github.com/cli/cli"
+url="https://cli.github.com"
 license=("MIT")
-depends=("glibc" "mailcap")
-makedepends=("go" "git")
-checkdepends=("openssh")
-optdepends=("git: To interact with repositories"
-            "org.freedesktop.secrets: Store credentials in system keyring")
-source=("$pkgname-$pkgver.tar.gz::$url/archive/v$pkgver.tar.gz")
-sha256sums=('a9c40e895293f50c10bfaa0bf92a9685128bd80dd6b4d04c7fea1d5494314a60')
+makedepends=(
+	"go"
+	"gcc"
+	"make"
+)
+source=(
+	"https://github.com/cli/cli/archive/refs/tags/v$pkgver.tar.gz"
+)
+sha256sums=(
+	"61363c109487a17fad44dff3a55f0c7dd36c8d6e4d7b630755705bd3aa34a323"
+)
 
 prepare() {
-    cd "cli-${pkgver}"
-    rm pkg/cmd/auth/login/login_test.go
-    rm pkg/cmd/search/shared/shared_test.go \
-       internal/codespaces/rpc/invoker_test.go
+	cd "cli-$pkgver"
+	sed -i "/^var Version/s/DEV/$pkgver/" internal/build/build.go
 }
 
 build() {
-    cd "cli-$pkgver"
+	cd "cli-$pkgver"
+	export CGO_CFLAGS="$CFLAGS" CGO_LDFLAGS="$LDFLAGS" \
+		GOPATH=/tmp/go GOCACHE=/tmp/go \
+		GOTOOLCHAIN=local
+	test ! -d bin && mkdir bin
+	go build \
+		-buildmode pie \
+		-trimpath \
+		-ldflags "-linkmode=external" \
+		-mod readonly \
+		-modcacherw \
+		-o bin/gh cmd/gh/main.go
 
-    export CGO_CPPFLAGS="${CPPFLAGS}"
-    export CGO_CFLAGS="${CFLAGS}"
-    export CGO_CXXFLAGS="${CXXFLAGS}"
-    export CGO_LDFLAGS="${LDFLAGS}"
-    export GOFLAGS='-buildmode=pie -trimpath -mod=readonly -modcacherw'
-
-    make GH_VERSION="v$pkgver" bin/gh manpages
-    bin/gh completion -s bash | install -Dm0644 /dev/stdin share/bash-completion/completions/gh
-    bin/gh completion -s zsh  | install -Dm0644 /dev/stdin share/zsh/site-functions/_gh
-    bin/gh completion -s fish | install -Dm0644 /dev/stdin share/fish/vendor_completions.d/gh.fish
-}
-
-check(){
-    cd "cli-$pkgver"
-    make test || true
+	make manpages completions
 }
 
 package() {
-    cd "cli-$pkgver"
-    make DESTDIR="${pkgdir}" prefix="/usr" install
-    cp -r share/ "$pkgdir"/usr
-    install -Dm644 "LICENSE" "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
-    install -Dm644 "README.md" "$pkgdir/usr/share/doc/$pkgname/README.md"
+	cd "cli-$pkgver"
+	make install DESTDIR="$pkgdir" prefix="/usr"
+	install -Dm 644 LICENSE -t "$pkgdir/usr/share/licenses/gh"
 }


############# Stripped diff below #################

--- arch_depends
+++ artix_depends
@@ -1,4 +1,3 @@
-git
-glibc
+gcc
 go
-mailcap
+make

--- Arch PKGBUILD
+++ Artix PKGBUILD
@@ -1,18 +1,19 @@
 prepare() {
-cd "cli-${pkgver}"
-rm pkg/cmd/auth/login/login_test.go
-rm pkg/cmd/search/shared/shared_test.go \
-internal/codespaces/rpc/invoker_test.go
+cd "cli-$pkgver"
+sed -i "/^var Version/s/DEV/$pkgver/" internal/build/build.go
 }
 build() {
 cd "cli-$pkgver"
-export CGO_CPPFLAGS="${CPPFLAGS}"
-export CGO_CFLAGS="${CFLAGS}"
-export CGO_CXXFLAGS="${CXXFLAGS}"
-export CGO_LDFLAGS="${LDFLAGS}"
-export GOFLAGS='-buildmode=pie -trimpath -mod=readonly -modcacherw'
-make GH_VERSION="v$pkgver" bin/gh manpages
-bin/gh completion -s bash | install -Dm0644 /dev/stdin share/bash-completion/completions/gh
-bin/gh completion -s zsh  | install -Dm0644 /dev/stdin share/zsh/site-functions/_gh
-bin/gh completion -s fish | install -Dm0644 /dev/stdin share/fish/vendor_completions.d/gh.fish
+export CGO_CFLAGS="$CFLAGS" CGO_LDFLAGS="$LDFLAGS" \
+GOPATH=/tmp/go GOCACHE=/tmp/go \
+GOTOOLCHAIN=local
+test ! -d bin && mkdir bin
+go build \
+-buildmode pie \
+-trimpath \
+-ldflags "-linkmode=external" \
+-mod readonly \
+-modcacherw \
+-o bin/gh cmd/gh/main.go
+make manpages completions
 }
