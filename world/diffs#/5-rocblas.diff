--- Arch PKGBUILD
+++ Artix PKGBUILD
@@ -1,55 +1,57 @@
 pkgname=rocblas
-pkgver=6.2.2
-pkgrel=2
+pkgver=6.0.0
+pkgrel=1
 pkgdesc='Next generation BLAS implementation for ROCm platform'
 arch=('x86_64')
 url='https://rocblas.readthedocs.io/en/latest'
 license=('MIT')
-depends=('rocm-core' 'hip-runtime-amd' 'glibc' 'gcc-libs' 'openmp')
-makedepends=('rocm-cmake' 'python' 'python-virtualenv' 'python-pyaml' 'python-wheel' 'git'
+depends=('hip' 'openmp')
+makedepends=('rocm-cmake' 'python' 'python-virtualenv' 'python-pyaml' 'python-wheel'
              'python-msgpack' 'python-joblib' 'perl-file-which' 'msgpack-cxx' 'gcc-fortran')
 _rocblas='https://github.com/ROCmSoftwarePlatform/rocBLAS'
 _tensile='https://github.com/ROCmSoftwarePlatform/Tensile'
 source=("$pkgname-$pkgver.tar.gz::$_rocblas/archive/rocm-$pkgver.tar.gz"
         "$pkgname-tensile-$pkgver.tar.gz::$_tensile/archive/refs/tags/rocm-$pkgver.tar.gz"
-        "remove-mf16c-flag-as-f16-intrinsics.patch")
-sha256sums=('fcb28d098a6ba71512dd9589a11e4c4a7c61779fab0575a71abaac1f04de8bc8'
-            '8b3ee61cead8d3d229c123cc6bcebc2dc26b846de1a25ee4ec455ed7dbcdc93b'
-            '5ed4d48d747c36c7a3739abd0ee791d92754cbabade09be0e80261d3431bb268')
+        "find-msgpack-5.patch")
+sha256sums=('befa4a75f1de0ea37f2358d4c2de5406d7bce671ca9936e2294b64d3b3bafb60'
+            '5d90add62d1439b7daf0527316e950e454e5d8beefb4f723865fe9ab26c7aa42'
+            '3f91bf087e4ea72eaef5acd500e16b61aa69c029cfcca14666799a7c42a0c5aa')
 options=(!lto)
 _dirname="$(basename "$_rocblas")-$(basename "${source[0]}" ".tar.gz")"
 _tensile_dir="$(basename "$_tensile")-$(basename "${source[1]}" ".tar.gz")"
 
-
 prepare() {
-  cd "$_dirname"
-  patch -Np1 -i ../remove-mf16c-flag-as-f16-intrinsics.patch
+    cd "$_tensile_dir"
+    patch -Np1 -i "$srcdir/find-msgpack-5.patch"
 }
 
 build() {
   export HIPCC_COMPILE_FLAGS_APPEND="-parallel-jobs=$(nproc)"
   export HIPCC_LINK_FLAGS_APPEND="-parallel-jobs=$(nproc)"
-  local cmake_args=(
-    -Wno-dev
-    -S "$_dirname"
-    -B build
-    -D CMAKE_BUILD_TYPE=None
-    -D CMAKE_CXX_COMPILER=/opt/rocm/bin/hipcc
-    -D CMAKE_TOOLCHAIN_FILE=toolchain-linux.cmake
-    -D CMAKE_CXX_FLAGS="${CXXFLAGS} -fcf-protection=none"
-    -D CMAKE_INSTALL_PREFIX=/opt/rocm
-    -D CMAKE_PREFIX_PATH=/opt/rocm/llvm/lib/cmake/llvm
-    -D amd_comgr_DIR=/opt/rocm/lib/cmake/amd_comgr
-    -D BUILD_WITH_TENSILE=ON
-    -D Tensile_LIBRARY_FORMAT=msgpack
-    -D Tensile_TEST_LOCAL_PATH="$srcdir/$_tensile_dir"
-  )
-  cmake "${cmake_args[@]}"
+  PATH="/opt/rocm/llvm/bin:/opt/rocm/bin:${PATH}" \
+  CXXFLAGS="${CXXFLAGS} -fcf-protection=none" \
+  cmake \
+    -Wno-dev \
+    -B build \
+    -S "$_dirname" \
+    -DCMAKE_BUILD_TYPE=None \
+    -DCMAKE_CXX_COMPILER=/opt/rocm/bin/hipcc \
+    -DCMAKE_INSTALL_PREFIX=/opt/rocm \
+    -DCMAKE_PREFIX_PATH=/opt/rocm/llvm/lib/cmake/llvm \
+    -Damd_comgr_DIR=/opt/rocm/lib/cmake/amd_comgr \
+    -DBUILD_WITH_TENSILE=ON \
+    -DTensile_LIBRARY_FORMAT=msgpack \
+    -DCMAKE_TOOLCHAIN_FILE=toolchain-linux.cmake \
+    -DBUILD_FILE_REORG_BACKWARD_COMPATIBILITY=ON \
+    -DTensile_TEST_LOCAL_PATH="$srcdir/$_tensile_dir"
   cmake --build build
 }
 
 package() {
   DESTDIR="$pkgdir" cmake --install build
 
+  echo "/opt/rocm/$pkgname/lib" > "$pkgname.conf"
+  install -Dm644 "$pkgname.conf" "$pkgdir/etc/ld.so.conf.d/rocblas.conf"
+
   install -Dm644 "$_dirname/LICENSE.md" "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
 }


############# Stripped diff below #################

--- arch_depends
+++ artix_depends
@@ -1,8 +1,5 @@
 gcc-fortran
-gcc-libs
-git
-glibc
-hip-runtime-amd
+hip
 msgpack-cxx
 openmp
 perl-file-which
@@ -13,4 +10,3 @@
 python-virtualenv
 python-wheel
 rocm-cmake
-rocm-core

--- Arch PKGBUILD
+++ Artix PKGBUILD
@@ -1,25 +1,25 @@
 prepare() {
-cd "$_dirname"
-patch -Np1 -i ../remove-mf16c-flag-as-f16-intrinsics.patch
+cd "$_tensile_dir"
+patch -Np1 -i "$srcdir/find-msgpack-5.patch"
 }
 build() {
 export HIPCC_COMPILE_FLAGS_APPEND="-parallel-jobs=$(nproc)"
 export HIPCC_LINK_FLAGS_APPEND="-parallel-jobs=$(nproc)"
-local cmake_args=(
--Wno-dev
--S "$_dirname"
--B build
--D CMAKE_BUILD_TYPE=None
--D CMAKE_CXX_COMPILER=/opt/rocm/bin/hipcc
--D CMAKE_TOOLCHAIN_FILE=toolchain-linux.cmake
--D CMAKE_CXX_FLAGS="${CXXFLAGS} -fcf-protection=none"
--D CMAKE_INSTALL_PREFIX=/opt/rocm
--D CMAKE_PREFIX_PATH=/opt/rocm/llvm/lib/cmake/llvm
--D amd_comgr_DIR=/opt/rocm/lib/cmake/amd_comgr
--D BUILD_WITH_TENSILE=ON
--D Tensile_LIBRARY_FORMAT=msgpack
--D Tensile_TEST_LOCAL_PATH="$srcdir/$_tensile_dir"
-)
-cmake "${cmake_args[@]}"
+PATH="/opt/rocm/llvm/bin:/opt/rocm/bin:${PATH}" \
+CXXFLAGS="${CXXFLAGS} -fcf-protection=none" \
+cmake \
+-Wno-dev \
+-B build \
+-S "$_dirname" \
+-DCMAKE_BUILD_TYPE=None \
+-DCMAKE_CXX_COMPILER=/opt/rocm/bin/hipcc \
+-DCMAKE_INSTALL_PREFIX=/opt/rocm \
+-DCMAKE_PREFIX_PATH=/opt/rocm/llvm/lib/cmake/llvm \
+-Damd_comgr_DIR=/opt/rocm/lib/cmake/amd_comgr \
+-DBUILD_WITH_TENSILE=ON \
+-DTensile_LIBRARY_FORMAT=msgpack \
+-DCMAKE_TOOLCHAIN_FILE=toolchain-linux.cmake \
+-DBUILD_FILE_REORG_BACKWARD_COMPATIBILITY=ON \
+-DTensile_TEST_LOCAL_PATH="$srcdir/$_tensile_dir"
 cmake --build build
 }
