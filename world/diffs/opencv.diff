--- Arch PKGBUILD
+++ Artix PKGBUILD
@@ -5,7 +5,7 @@
          python-opencv
          opencv-cuda)
 pkgver=4.9.0
-pkgrel=2
+pkgrel=3
 pkgdesc='Open Source Computer Vision Library'
 arch=(x86_64)
 license=(Apache-2.0)
@@ -39,6 +39,7 @@
              cudnn
              eigen
              fmt
+             gcc12
              glew
              hdf5
              java-environment
@@ -60,13 +61,19 @@
             'java-runtime: Java interface')
 source=(https://github.com/opencv/opencv/archive/$pkgver/$pkgname-$pkgver.tar.gz
         https://github.com/opencv/opencv_contrib/archive/$pkgver/opencv_contrib-$pkgver.tar.gz
-        vtk9.patch)
+        $pkgname-cccl-2.2.0.zip::https://github.com/NVIDIA/cccl/archive/refs/tags/v2.2.0.zip
+        vtk9.patch
+        fix-nppi-bufsize-type.patch)
 sha256sums=('ddf76f9dffd322c7c3cb1f721d0887f62d747b82059342213138dc190f28bc6c'
             '8952c45a73b75676c522dd574229f563e43c271ae1d5bbbd26f8e2b6bc1a4dae'
-            'f35a2d4ea0d6212c7798659e59eda2cb0b5bc858360f7ce9c696c77d3029668e')
+            'f0899311b537614f3bb79fcb20e5fa09e72b857ba3e5ef5d13ef64c6710483e7'
+            'f35a2d4ea0d6212c7798659e59eda2cb0b5bc858360f7ce9c696c77d3029668e'
+            '993032a43a62faecc56f3f7aeaed29e471605dabdf28579fbeb36d52ecaa4060')
 
 prepare() {
   patch -d $pkgname-$pkgver -p1 < vtk9.patch # Don't require all vtk optdepends
+
+  patch -d ${pkgname}_contrib-$pkgver -Np1 < fix-nppi-bufsize-type.patch
 }
 
 build() {
@@ -104,6 +111,19 @@
   cmake -B build -S $pkgname-$pkgver $_opts \
     -DBUILD_WITH_DEBUG_INFO=ON
   cmake --build build
+
+  cmake -B build-cccl -S cccl-2.2.0 -DCMAKE_INSTALL_PREFIX="$srcdir/install-cccl" \
+    -DCCCL_ENABLE_TESTING=OFF \
+    -DTHRUST_ENABLE_HEADER_TESTING=OFF \
+    -DTHRUST_ENABLE_TESTING=OFF \
+    -DTHRUST_ENABLE_EXAMPLES=OFF \
+    -DCUB_ENABLE_HEADER_TESTING=OFF \
+    -DCUB_ENABLE_TESTING=OFF \
+    -DCUB_ENABLE_EXAMPLES=OFF \
+    -DLIBCUDACXX_ENABLE_CMAKE_TESTS=OFF
+  cmake --build build-cccl
+  cmake --install build-cccl
+  export NVCC_PREPEND_FLAGS="$NVCC_PREPEND_FLAGS -I $srcdir/install-cccl/include"
 
   CFLAGS="${CFLAGS} -fno-lto" CXXFLAGS="${CXXFLAGS} -fno-lto" LDFLAGS="${LDFLAGS} -fno-lto" \
   cmake -B build-cuda -S $pkgname-$pkgver $_opts \


############# Stripped diff below #################

--- Arch PKGBUILD
+++ Artix PKGBUILD
@@ -29,6 +29,7 @@
 zlib)
 prepare() {
 patch -d $pkgname-$pkgver -p1 < vtk9.patch # Don't require all vtk optdepends
+patch -d ${pkgname}_contrib-$pkgver -Np1 < fix-nppi-bufsize-type.patch
 }
 build() {
 export JAVA_HOME="/usr/lib/jvm/default"
@@ -64,6 +65,18 @@
 cmake -B build -S $pkgname-$pkgver $_opts \
 -DBUILD_WITH_DEBUG_INFO=ON
 cmake --build build
+cmake -B build-cccl -S cccl-2.2.0 -DCMAKE_INSTALL_PREFIX="$srcdir/install-cccl" \
+-DCCCL_ENABLE_TESTING=OFF \
+-DTHRUST_ENABLE_HEADER_TESTING=OFF \
+-DTHRUST_ENABLE_TESTING=OFF \
+-DTHRUST_ENABLE_EXAMPLES=OFF \
+-DCUB_ENABLE_HEADER_TESTING=OFF \
+-DCUB_ENABLE_TESTING=OFF \
+-DCUB_ENABLE_EXAMPLES=OFF \
+-DLIBCUDACXX_ENABLE_CMAKE_TESTS=OFF
+cmake --build build-cccl
+cmake --install build-cccl
+export NVCC_PREPEND_FLAGS="$NVCC_PREPEND_FLAGS -I $srcdir/install-cccl/include"
 CFLAGS="${CFLAGS} -fno-lto" CXXFLAGS="${CXXFLAGS} -fno-lto" LDFLAGS="${LDFLAGS} -fno-lto" \
 cmake -B build-cuda -S $pkgname-$pkgver $_opts \
 -DBUILD_WITH_DEBUG_INFO=OFF \
