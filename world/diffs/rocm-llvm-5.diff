--- Arch PKGBUILD
+++ Artix PKGBUILD
@@ -1,15 +1,26 @@
 
-pkgbase=rocm-llvm
-pkgname=(rocm-llvm rocm-device-libs comgr)
-pkgver=6.2.2
-pkgrel=2
+pkgname=rocm-llvm
+pkgdesc='Radeon Open Compute - LLVM toolchain (llvm, clang, lld)'
+pkgver=6.0.2
+pkgrel=1
 arch=('x86_64')
 url='https://rocm.docs.amd.com/en/latest/reference/rocmcc.html'
-makedepends=('git' 'cmake' 'python' 'ninja' 'rocm-core' 'rocm-cmake' 'perl'
-             'gcc-libs' 'zlib' 'zstd' 'libffi' 'libedit' 'ncurses' 'libxml2' 'patchelf')
-source=("$pkgbase::git+https://github.com/ROCm/llvm-project#tag=rocm-$pkgver")
-sha256sums=('ba31afb2b041b766e2c59ad03328363b549eefbe7f1e9b235a70181538165d3e')
+license=('Apache-2.0 WITH LLVM-exception')
+depends=('rocm-core' 'perl' 'gcc-libs' 'zlib' 'zstd' 'libffi' 'libedit'
+         'ncurses' 'libxml2')
+makedepends=('cmake' 'python' 'ninja')
+_git='https://github.com/ROCm/llvm-project'
+source=("${pkgname}-${pkgver}.tar.gz::$_git/archive/rocm-$pkgver.tar.gz"
+        "${pkgname}-fix-segfault.patch")
+sha256sums=('7d35acc84de1adee65406f92a369a30364703f84279241c444cd93a48c7eeb76'
+            '4d3f198c5422e9987f442c20963223c39b1548ffa00b6c9db81af5070278ce03')
 options=(staticlibs !lto)
+_dirname="$(basename "$_git")-$(basename "${source[0]}" .tar.gz)"
+
+prepare() {
+    cd "$_dirname"
+    patch -Np1 -i ../"${pkgname}-fix-segfault.patch"
+}
 
 build() {
     CFLAGS+=' -g1'
@@ -18,7 +29,7 @@
     local cmake_args=(
         -G Ninja
         -B build
-        -S "$pkgbase/llvm"
+        -S "$_dirname/llvm"
         -DCMAKE_BUILD_TYPE=Release
         -DCMAKE_INSTALL_PREFIX='/opt/rocm/lib/llvm'
         -DLLVM_HOST_TRIPLE=$CHOST
@@ -42,73 +53,23 @@
         -DCLANG_INCLUDE_TESTS=OFF
         -DLLVM_BINUTILS_INCDIR=/usr/include
     )
+
     cmake "${cmake_args[@]}"
     cmake --build build
-
-    local cmake_device_libs_args=(
-        -Wno-dev
-        -S "$pkgbase/amd/device-libs"
-        -B build-device-libs
-        -D CMAKE_BUILD_TYPE=None
-        -D CMAKE_INSTALL_PREFIX=/opt/rocm
-        -D CMAKE_PREFIX_PATH="$srcdir/build"
-    )
-    cmake "${cmake_device_libs_args[@]}"
-    cmake --build build-device-libs
-
-    local cmake_comgr_args=(
-        -Wno-dev
-        -S "$pkgbase/amd/comgr"
-        -B build-comgr
-        -D CMAKE_BUILD_TYPE=None
-        -D CMAKE_INSTALL_PREFIX=/opt/rocm
-        -D BUILD_TESTING=OFF
-        -D CMAKE_PREFIX_PATH="$srcdir/build;$srcdir/build-device-libs"
-    )
-    cmake "${cmake_comgr_args[@]}"
-    cmake --build build-comgr
 }
 
-package_rocm-llvm() {
-    pkgdesc='Radeon Open Compute - LLVM toolchain (llvm, clang, lld)'
-    license=('Apache-2.0 WITH LLVM-exception')
-    depends=('rocm-core' 'perl' 'gcc-libs' 'zlib' 'zstd' 'libffi' 'libedit'
-             'ncurses' 'libxml2')
-
+package() {
     DESTDIR="$pkgdir" cmake --install build
 
     ln -s /opt/rocm/lib/llvm "$pkgdir/opt/rocm/llvm"
 
-    patchelf --set-rpath '$ORIGIN' "$pkgdir/opt/rocm/lib/llvm/lib/libc++abi.so"
-
     install -d "$pkgdir/opt/rocm/lib/llvm/lib/bfd-plugins"
     ln -s /opt/rocm/lib/llvm/lib/LLVMgold.so "$pkgdir/opt/rocm/lib/llvm/lib/bfd-plugins/LLVMgold.so"
 
-    cd "$pkgbase"
+    cd "$_dirname"
     install -Dm644 llvm/LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/llvm-LICENSE"
     install -Dm644 clang/LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/clang-LICENSE"
     install -Dm644 clang-tools-extra/LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/clang-tools-extra-LICENSE"
     install -Dm644 compiler-rt/LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/compiler-rt-LICENSE"
     install -Dm644 lld/LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/lld-LICENSE"
 }
-
-package_rocm-device-libs() {
-    pkgdesc='AMD specific device-side language runtime libraries'
-    license=('NCSA')
-    depends=('rocm-core')
-
-    DESTDIR="$pkgdir" cmake --install build-device-libs
-    cd "$pkgbase/amd/device-libs"
-    install -Dm644 LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
-}
-
-package_comgr() {
-    pkgdesc='AMDGPU GPU Code Object Manager'
-    license=('NCSA')
-    depends=('glibc' 'gcc-libs' 'zstd' 'zlib' 'ncurses'
-             'rocm-core' 'rocm-llvm' 'rocm-device-libs')
-
-    DESTDIR="$pkgdir" cmake --install build-comgr
-    cd "$pkgbase/amd/comgr"
-    install -Dm644 LICENSE.txt "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
-}


############# Stripped diff below #################

--- arch_depends
+++ artix_depends
@@ -1,18 +1,12 @@
 cmake
 gcc-libs
-git
-glibc
 libedit
 libffi
 libxml2
 ncurses
 ninja
-patchelf
 perl
 python
-rocm-cmake
 rocm-core
-rocm-device-libs
-rocm-llvm
 zlib
 zstd

--- Arch PKGBUILD
+++ Artix PKGBUILD
@@ -1,10 +1,14 @@
+prepare() {
+cd "$_dirname"
+patch -Np1 -i ../"${pkgname}-fix-segfault.patch"
+}
 build() {
 CFLAGS+=' -g1'
 CXXFLAGS+=' -g1'
 local cmake_args=(
 -G Ninja
 -B build
--S "$pkgbase/llvm"
+-S "$_dirname/llvm"
 -DCMAKE_BUILD_TYPE=Release
 -DCMAKE_INSTALL_PREFIX='/opt/rocm/lib/llvm'
 -DLLVM_HOST_TRIPLE=$CHOST
@@ -30,25 +34,4 @@
 )
 cmake "${cmake_args[@]}"
 cmake --build build
-local cmake_device_libs_args=(
--Wno-dev
--S "$pkgbase/amd/device-libs"
--B build-device-libs
--D CMAKE_BUILD_TYPE=None
--D CMAKE_INSTALL_PREFIX=/opt/rocm
--D CMAKE_PREFIX_PATH="$srcdir/build"
-)
-cmake "${cmake_device_libs_args[@]}"
-cmake --build build-device-libs
-local cmake_comgr_args=(
--Wno-dev
--S "$pkgbase/amd/comgr"
--B build-comgr
--D CMAKE_BUILD_TYPE=None
--D CMAKE_INSTALL_PREFIX=/opt/rocm
--D BUILD_TESTING=OFF
--D CMAKE_PREFIX_PATH="$srcdir/build;$srcdir/build-device-libs"
-)
-cmake "${cmake_comgr_args[@]}"
-cmake --build build-comgr
 }
