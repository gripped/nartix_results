--- Arch PKGBUILD
+++ Artix PKGBUILD
@@ -1,8 +1,8 @@
 
 
 pkgname=blender
-pkgver=4.4.1
-pkgrel=1
+pkgver=4.3.2
+pkgrel=2
 epoch=17
 pkgdesc="A fully integrated 3D graphics creation suite"
 arch=('x86_64')
@@ -101,7 +101,6 @@
   'ninja'
   'subversion'
   'wayland-protocols'
-  'vulkan-headers'
 )
 optdepends=('cuda: Cycles renderer CUDA support'
             'intel-compute-runtime: Cycles renderer Intel OneAPI support'
@@ -112,10 +111,22 @@
 source=("git+https://projects.blender.org/blender/blender.git#tag=v$pkgver"
         "git+https://projects.blender.org/blender/blender-assets#tag=v$pkgver"
         https://developer.download.nvidia.com/redist/optix/v8.0/OptiX-8.0-Include.zip
+        https://projects.blender.org/blender/blender/commit/d9f38fca5ffe29136cd6f390e318ad8455864582.patch
+        force-draco1.patch
+        force-draco2.patch
+        blender-4.11-mantaflow-python-3.12.patch
+        ffmpeg-7-1.patch
+        ffmpeg-7-2.patch
         hiprt-lib-path.patch)
-sha512sums=('aaa6a124dd2b66a8fb3919580d4c5cec8a14c1c4294ab50570e50649f8e93f2c78894514e0606251f99a5194d51ca15e85d71471dcc3c240a66e7373168e7fba'
-            '43cc5f388581698a68ad611222fcf48445441fc58685259beacb4e6de62c86db6adb7d255f1781bbb1cacf3eade4a6745ddcc519dfed3f776bddcbe1e3ee82d9'
+sha512sums=('c19e26326cebd8afe4f8c6ca2bbeed15092c53a0bfceec5b6ac226fe2ebd48e701830c840b8e44a6142da95bbf6ddbe9da93aa1afc5f1d379848a38bd06d1f93'
+            '88be713847bca183f78efd5dccb049e1d40e366b48bfdfb5ef781832f235dedaae84a109b04ce3c2b7d379c38e49daa340e8cd1f1a87e2ee4929e489b5d10dc3'
             '5502d9df847de12badc702c0444bd4f1f7620460b2235026df2c3133da1e04c148af0f1fc7f345e9a0c009c32f905f66c8d427743445e8864d3a797cdce6a483'
+            '69eb94cb77e7be10bf95f34edf753f038417077df45e15f2e27171d6cdea258e3a90dcca278b84118fe2e3f710a3011527769cff595127dae324a7aeb92056e6'
+            '96098190ac8d7665047fa1d08a116740cee6669e84780876ea06afd7e505bbcb17820533c2f666a368fb2e2b45dc1ab9cc2d08684649a283fde5b3eb66a8a93b'
+            'a3cc13d7fedc4421e9edfa37a29c237c55c74ca29f05d72480369d6bcde4a276f061de0398962d0529decffe69ff3e797b4b2d38e43d7cf73b9d72d1a9d01236'
+            '59044954880ce94d7a1da78ccd03e61a9d23382281b2221ca5c9c7eec9caeecf810d10ee07940d5843b7540fa81c00df5a26e8076605410116815e73c60ab9b9'
+            'ce67f8cb4857f3cc98759f00c226e1e0f81578a656e5772bd016fd0eee387f1fc0bc8e44b54e4ddef4df226d416f4ba2f7ef9e7ad02db36c968e727c986e3c4e'
+            'e1522345d6119ad396f27293b5f67b3a6d1b7352791186a04aeb654f285eeae873937f124461ff8dc9fc8ac5ae820cd8254bd4c3b64dcc06f1e41bee45f9bbe9'
             '52dd6c4496af38505761e559adee556176aa2ad023f073618af77f6c9bc5e3a8faa59c8f259dc92302f7e650740afd2060951129408f1939d29c0901e8ccccae')
 
 prepare() {
@@ -130,7 +141,17 @@
   git -C release/datafiles/assets lfs fetch network-origin
   git -C release/datafiles/assets lfs checkout
 
+  patch -p1 -i "$srcdir"/force-draco1.patch
+  patch -p1 -i "$srcdir"/force-draco2.patch
+
+  patch -p1 -i "$srcdir"/blender-4.11-mantaflow-python-3.12.patch
+
+  patch -p1 -i "$srcdir"/ffmpeg-7-1.patch
+  patch -p1 -i "$srcdir"/ffmpeg-7-2.patch
+
   patch -p1 -i "$srcdir"/hiprt-lib-path.patch
+
+  patch -p1 -i "$srcdir"/d9f38fca5ffe29136cd6f390e318ad8455864582.patch
 }
 
 _get_pyver() {
@@ -139,23 +160,23 @@
 
 build() {
   export CXXFLAGS=${CXXFLAGS/-Wp,-D_GLIBCXX_ASSERTIONS/}
-  CXXFLAGS+=' --param=max-vartrack-size=640000000'
-
-  sed -i "s|core/include|_core/include|g" blender/CMakeLists.txt
 
   local cmake_options=(
     -B build
     -C "$pkgname/build_files/cmake/config/blender_release.cmake"
+    -C "$srcdir/precache"
     -D CMAKE_BUILD_TYPE=Release
     -D CMAKE_INSTALL_PREFIX=/usr
     -D WITH_LINKER_MOLD=ON
     -D CUDA_HOST_COMPILER="$NVCC_CCBIN"
     -D HIP_ROOT_DIR=/opt/rocm
+    -D WITH_CYCLES_HIP_BIANRIES=ON
+    -D WITH_CYCLES_DEVICE_HIPRT=ON
     -D HIPRT_INCLUDE_DIR=/opt/rocm/include
+    -D HIP_LINKER_EXECUTABLE=/opt/rocm/lib/llvm/bin/clang++
     -D OCLOC_INSTALL_DIR=/usr
     -D OPTIX_ROOT_DIR="$srcdir"
     -D PYTHON_VERSION="$(_get_pyver)"
-    -D SYCL_CPP_FLAGS="--verbose"  # for debugging
     -D SYCL_ROOT_DIR=/opt/intel/oneapi/compiler/latest
     -D SYCL_OFFLINE_COMPILER_PARALLEL_JOBS=8
     -D USD_ROOT_DIR=/usr
@@ -167,6 +188,9 @@
     -W no-dev
   )
 
+  echo 'set(CYCLES_CUDA_BINARIES_ARCH sm_52 sm_53 sm_60 sm_61 sm_62 sm_70 sm_72 sm_75 sm_80 sm_86 sm_87 sm_89 compute_89 CACHE STRING "CUDA architectures to build binaries for" FORCE)' > precache
+  echo 'mark_as_advanced(CYCLES_CUDA_BINARIES_ARCH)' >> precache
+
   cmake "${cmake_options[@]}"
   cmake --build build
 }
@@ -181,7 +205,10 @@
 
   install -Dm644 release/freedesktop/org.blender.Blender.metainfo.xml "${pkgdir}/usr/share/metainfo/org.blender.Blender.metainfo.xml"
 
-  mkdir "${pkgdir}"/usr/lib/
+  mkdir -p "${pkgdir}/usr/lib/python$(_get_pyver)"/
+  mv "${pkgdir}"/usr/share/blender/4*/python/lib/* "${pkgdir}"/usr/lib/
+  rm -r "${pkgdir}"/usr/share/blender/4*/python
+
   mv "${pkgdir}"/usr/share/blender/lib/libcycles_kernel_oneapi_aot.so "${pkgdir}"/usr/lib/
 
   install -vDm 644 doc/license/{BSD-{2,3}-Clause,MIT,Zlib}-license.txt -t "$pkgdir/usr/share/licenses/$pkgname/"


############# Stripped diff below #################

--- arch_depends
+++ artix_depends
@@ -73,7 +73,6 @@
 shared-mime-info
 subversion
 usd
-vulkan-headers
 wayland-protocols
 xdg-utils
 yaml-cpp

--- Arch PKGBUILD
+++ Artix PKGBUILD
@@ -7,25 +7,32 @@
 git -C release/datafiles/assets remote add network-origin https://projects.blender.org/blender/blender-assets
 git -C release/datafiles/assets lfs fetch network-origin
 git -C release/datafiles/assets lfs checkout
+patch -p1 -i "$srcdir"/force-draco1.patch
+patch -p1 -i "$srcdir"/force-draco2.patch
+patch -p1 -i "$srcdir"/blender-4.11-mantaflow-python-3.12.patch
+patch -p1 -i "$srcdir"/ffmpeg-7-1.patch
+patch -p1 -i "$srcdir"/ffmpeg-7-2.patch
 patch -p1 -i "$srcdir"/hiprt-lib-path.patch
+patch -p1 -i "$srcdir"/d9f38fca5ffe29136cd6f390e318ad8455864582.patch
 }
 build() {
 export CXXFLAGS=${CXXFLAGS/-Wp,-D_GLIBCXX_ASSERTIONS/}
-CXXFLAGS+=' --param=max-vartrack-size=640000000'
-sed -i "s|core/include|_core/include|g" blender/CMakeLists.txt
 local cmake_options=(
 -B build
 -C "$pkgname/build_files/cmake/config/blender_release.cmake"
+-C "$srcdir/precache"
 -D CMAKE_BUILD_TYPE=Release
 -D CMAKE_INSTALL_PREFIX=/usr
 -D WITH_LINKER_MOLD=ON
 -D CUDA_HOST_COMPILER="$NVCC_CCBIN"
 -D HIP_ROOT_DIR=/opt/rocm
+-D WITH_CYCLES_HIP_BIANRIES=ON
+-D WITH_CYCLES_DEVICE_HIPRT=ON
 -D HIPRT_INCLUDE_DIR=/opt/rocm/include
+-D HIP_LINKER_EXECUTABLE=/opt/rocm/lib/llvm/bin/clang++
 -D OCLOC_INSTALL_DIR=/usr
 -D OPTIX_ROOT_DIR="$srcdir"
 -D PYTHON_VERSION="$(_get_pyver)"
--D SYCL_CPP_FLAGS="--verbose"  # for debugging
 -D SYCL_ROOT_DIR=/opt/intel/oneapi/compiler/latest
 -D SYCL_OFFLINE_COMPILER_PARALLEL_JOBS=8
 -D USD_ROOT_DIR=/usr
@@ -36,6 +43,8 @@
 -S "$pkgname"
 -W no-dev
 )
+echo 'set(CYCLES_CUDA_BINARIES_ARCH sm_52 sm_53 sm_60 sm_61 sm_62 sm_70 sm_72 sm_75 sm_80 sm_86 sm_87 sm_89 compute_89 CACHE STRING "CUDA architectures to build binaries for" FORCE)' > precache
+echo 'mark_as_advanced(CYCLES_CUDA_BINARIES_ARCH)' >> precache
 cmake "${cmake_options[@]}"
 cmake --build build
 }
