--- Arch PKGBUILD
+++ Artix PKGBUILD
@@ -1,77 +1,57 @@
 pkgname=rocblas
-pkgver=6.3.2
+pkgver=6.0.0
 pkgrel=1
 pkgdesc='Next generation BLAS implementation for ROCm platform'
 arch=('x86_64')
 url='https://rocblas.readthedocs.io/en/latest'
 license=('MIT')
-depends=(
-  'rocm-core'
-  'hip-runtime-amd'
-  'glibc'
-  'gcc-libs'
-  'openmp'
-  'cblas'
-)
-makedepends=(
-  'git'
-  'cmake'
-  'rocm-cmake'
-  'python'
-  'python-virtualenv'
-  'python-pyaml'
-  'python-wheel'
-  'python-tensile'
-  'python-msgpack'
-  'python-joblib'
-  'perl-file-which'
-  'msgpack-cxx'
-  'gcc-fortran'
-)
-_rocblas='https://github.com/ROCm/rocBLAS'
-_tensile='https://github.com/ROCm/Tensile'
-source=("$pkgname-$pkgver.tar.gz::$_rocblas/archive/refs/tags/rocm-$pkgver.tar.gz"
-        "$pkgname-tensile-$pkgver.tar.gz::$_tensile/archive/refs/tags/rocm-$pkgver.tar.gz")
-sha256sums=('455cad760d926c21101594197c4456f617e5873a8f17bb3e14bd762018545a9e'
-            '700e43a22d7e6309bf74624b18a42bb0132ef35716fccec897d3045a97759e6a')
+depends=('hip' 'openmp')
+makedepends=('rocm-cmake' 'python' 'python-virtualenv' 'python-pyaml' 'python-wheel'
+             'python-msgpack' 'python-joblib' 'perl-file-which' 'msgpack-cxx' 'gcc-fortran')
+_rocblas='https://github.com/ROCmSoftwarePlatform/rocBLAS'
+_tensile='https://github.com/ROCmSoftwarePlatform/Tensile'
+source=("$pkgname-$pkgver.tar.gz::$_rocblas/archive/rocm-$pkgver.tar.gz"
+        "$pkgname-tensile-$pkgver.tar.gz::$_tensile/archive/refs/tags/rocm-$pkgver.tar.gz"
+        "find-msgpack-5.patch")
+sha256sums=('befa4a75f1de0ea37f2358d4c2de5406d7bce671ca9936e2294b64d3b3bafb60'
+            '5d90add62d1439b7daf0527316e950e454e5d8beefb4f723865fe9ab26c7aa42'
+            '3f91bf087e4ea72eaef5acd500e16b61aa69c029cfcca14666799a7c42a0c5aa')
 options=(!lto)
 _dirname="$(basename "$_rocblas")-$(basename "${source[0]}" ".tar.gz")"
 _tensile_dir="$(basename "$_tensile")-$(basename "${source[1]}" ".tar.gz")"
 
+prepare() {
+    cd "$_tensile_dir"
+    patch -Np1 -i "$srcdir/find-msgpack-5.patch"
+}
+
 build() {
   export HIPCC_COMPILE_FLAGS_APPEND="-parallel-jobs=$(nproc)"
   export HIPCC_LINK_FLAGS_APPEND="-parallel-jobs=$(nproc)"
-
-  export PATH="/opt/rocm/lib/llvm/bin:$PATH"
-
-  local cmake_args=(
-    -Wno-dev
-    -S "$_dirname"
-    -B build
-    -D CMAKE_BUILD_TYPE=None
-    -D CMAKE_C_COMPILER=/opt/rocm/lib/llvm/bin/amdclang
-    -D CMAKE_CXX_COMPILER=/opt/rocm/lib/llvm/bin/amdclang++
-    -D CMAKE_TOOLCHAIN_FILE=toolchain-linux.cmake
-    -D CMAKE_CXX_FLAGS="${CXXFLAGS} -fcf-protection=none"
-    -D CMAKE_INSTALL_PREFIX=/opt/rocm
-    -D CMAKE_PREFIX_PATH=/opt/rocm/llvm/lib/cmake/llvm
-    -D amd_comgr_DIR=/opt/rocm/lib/cmake/amd_comgr
-    -D BUILD_FILE_REORG_BACKWARD_COMPATIBILITY=OFF
-    -D HIP_PLATFORM=amd
-    -D BLAS_LIBRARY=cblas
-    -D BUILD_WITH_TENSILE=ON
-    -D Tensile_LIBRARY_FORMAT=msgpack
-    -D Tensile_TEST_LOCAL_PATH="$srcdir/$_tensile_dir"
-    -D Tensile_COMPILER=hipcc
-    -D BUILD_WITH_PIP=OFF
-    -D BUILD_WITH_HIPBLASLT=OFF
-  )
-  cmake "${cmake_args[@]}"
+  PATH="/opt/rocm/llvm/bin:/opt/rocm/bin:${PATH}" \
+  CXXFLAGS="${CXXFLAGS} -fcf-protection=none" \
+  cmake \
+    -Wno-dev \
+    -B build \
+    -S "$_dirname" \
+    -DCMAKE_BUILD_TYPE=None \
+    -DCMAKE_CXX_COMPILER=/opt/rocm/bin/hipcc \
+    -DCMAKE_INSTALL_PREFIX=/opt/rocm \
+    -DCMAKE_PREFIX_PATH=/opt/rocm/llvm/lib/cmake/llvm \
+    -Damd_comgr_DIR=/opt/rocm/lib/cmake/amd_comgr \
+    -DBUILD_WITH_TENSILE=ON \
+    -DTensile_LIBRARY_FORMAT=msgpack \
+    -DCMAKE_TOOLCHAIN_FILE=toolchain-linux.cmake \
+    -DBUILD_FILE_REORG_BACKWARD_COMPATIBILITY=ON \
+    -DTensile_TEST_LOCAL_PATH="$srcdir/$_tensile_dir"
   cmake --build build
 }
 
 package() {
   DESTDIR="$pkgdir" cmake --install build
 
+  echo "/opt/rocm/$pkgname/lib" > "$pkgname.conf"
+  install -Dm644 "$pkgname.conf" "$pkgdir/etc/ld.so.conf.d/rocblas.conf"
+
   install -Dm644 "$_dirname/LICENSE.md" "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
 }


############# Stripped diff below #################

--- arch_depends
+++ artix_depends
@@ -1,10 +1,5 @@
-cblas
-cmake
 gcc-fortran
-gcc-libs
-git
-glibc
-hip-runtime-amd
+hip
 msgpack-cxx
 openmp
 perl-file-which
@@ -12,8 +7,6 @@
 python-joblib
 python-msgpack
 python-pyaml
-python-tensile
 python-virtualenv
 python-wheel
 rocm-cmake
-rocm-core

--- Arch PKGBUILD
+++ Artix PKGBUILD
@@ -1,29 +1,25 @@
+prepare() {
+cd "$_tensile_dir"
+patch -Np1 -i "$srcdir/find-msgpack-5.patch"
+}
 build() {
 export HIPCC_COMPILE_FLAGS_APPEND="-parallel-jobs=$(nproc)"
 export HIPCC_LINK_FLAGS_APPEND="-parallel-jobs=$(nproc)"
-export PATH="/opt/rocm/lib/llvm/bin:$PATH"
-local cmake_args=(
--Wno-dev
--S "$_dirname"
--B build
--D CMAKE_BUILD_TYPE=None
--D CMAKE_C_COMPILER=/opt/rocm/lib/llvm/bin/amdclang
--D CMAKE_CXX_COMPILER=/opt/rocm/lib/llvm/bin/amdclang++
--D CMAKE_TOOLCHAIN_FILE=toolchain-linux.cmake
--D CMAKE_CXX_FLAGS="${CXXFLAGS} -fcf-protection=none"
--D CMAKE_INSTALL_PREFIX=/opt/rocm
--D CMAKE_PREFIX_PATH=/opt/rocm/llvm/lib/cmake/llvm
--D amd_comgr_DIR=/opt/rocm/lib/cmake/amd_comgr
--D BUILD_FILE_REORG_BACKWARD_COMPATIBILITY=OFF
--D HIP_PLATFORM=amd
--D BLAS_LIBRARY=cblas
--D BUILD_WITH_TENSILE=ON
--D Tensile_LIBRARY_FORMAT=msgpack
--D Tensile_TEST_LOCAL_PATH="$srcdir/$_tensile_dir"
--D Tensile_COMPILER=hipcc
--D BUILD_WITH_PIP=OFF
--D BUILD_WITH_HIPBLASLT=OFF
-)
-cmake "${cmake_args[@]}"
+PATH="/opt/rocm/llvm/bin:/opt/rocm/bin:${PATH}" \
+CXXFLAGS="${CXXFLAGS} -fcf-protection=none" \
+cmake \
+-Wno-dev \
+-B build \
+-S "$_dirname" \
+-DCMAKE_BUILD_TYPE=None \
+-DCMAKE_CXX_COMPILER=/opt/rocm/bin/hipcc \
+-DCMAKE_INSTALL_PREFIX=/opt/rocm \
+-DCMAKE_PREFIX_PATH=/opt/rocm/llvm/lib/cmake/llvm \
+-Damd_comgr_DIR=/opt/rocm/lib/cmake/amd_comgr \
+-DBUILD_WITH_TENSILE=ON \
+-DTensile_LIBRARY_FORMAT=msgpack \
+-DCMAKE_TOOLCHAIN_FILE=toolchain-linux.cmake \
+-DBUILD_FILE_REORG_BACKWARD_COMPATIBILITY=ON \
+-DTensile_TEST_LOCAL_PATH="$srcdir/$_tensile_dir"
 cmake --build build
 }
