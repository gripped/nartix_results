--- Arch PKGBUILD
+++ Artix PKGBUILD
@@ -1,38 +1,42 @@
 
 pkgname=ninja
-pkgver=1.13.1
-pkgrel=1
+pkgver=1.12.1
+pkgrel=2
 pkgdesc='Small build system with a focus on speed'
 arch=(x86_64)
 url='https://ninja-build.org/'
 license=(Apache-2.0)
 depends=(gcc-libs)
-makedepends=(cmake python re2c)
+makedepends=(cmake python re2c emacs-nox)
 checkdepends=(gtest)
 source=($pkgname-$pkgver.zip::https://github.com/ninja-build/ninja/archive/v$pkgver.zip)
-sha256sums=('5bfe6e147f39347f53777fce2fff324811297f12f4199623a9e3d5a9dc431d69')
+sha1sums=('ebdc7b4e92dd25fa91d7801ad150bd4b7a4990ce')
+sha256sums=('40db6f6c77045efc817209fa72c3f92a399b7e39cf8e4cddfe7e65df2dd5dcbe')
 
 build() {
-  cmake -B build -S ninja-$pkgver \
-      -DCMAKE_BUILD_TYPE=None \
-      -DCMAKE_INSTALL_PREFIX=/usr \
-      -Wno-dev
-  cmake --build build
+  cd ninja-$pkgver
+
+  cmake -Bbuild-cmake
+  cmake --build build-cmake
+  emacs -Q --batch -f batch-byte-compile misc/ninja-mode.el
 }
 
 check() {
-  ./build/ninja_test
+  cd ninja-$pkgver
+  ./build-cmake/ninja_test
 }
 
 package() {
+  cd ninja-$pkgver
 
   local site_packages=$(python -c "import site; print(site.getsitepackages()[0])")
 
-  install -m755 -D build/ninja "$pkgdir/usr/bin/ninja"
-  cd ninja-$pkgver
+  install -m755 -D build-cmake/ninja "$pkgdir/usr/bin/ninja"
   install -m644 -D doc/manual.asciidoc "$pkgdir/usr/share/doc/ninja/manual.asciidoc"
   install -Dm644 COPYING "$pkgdir/usr/share/licenses/$pkgname/COPYING"
 
+  install -m644 -D misc/ninja-mode.el "$pkgdir/usr/share/emacs/site-lisp/ninja-mode.el"
+  install -m644 -D misc/ninja-mode.elc "$pkgdir/usr/share/emacs/site-lisp/ninja-mode.elc"
   install -m644 -D misc/ninja.vim "$pkgdir/usr/share/vim/vimfiles/syntax/ninja.vim"
   install -m644 -D misc/ninja_syntax.py "$pkgdir/$site_packages/ninja_syntax.py"
 


############# Stripped diff below #################

--- arch_depends
+++ artix_depends
@@ -1,4 +1,5 @@
 cmake
+emacs-nox
 gcc-libs
 python
 re2c

--- Arch PKGBUILD
+++ Artix PKGBUILD
@@ -1,7 +1,6 @@
 build() {
-cmake -B build -S ninja-$pkgver \
--DCMAKE_BUILD_TYPE=None \
--DCMAKE_INSTALL_PREFIX=/usr \
--Wno-dev
-cmake --build build
+cd ninja-$pkgver
+cmake -Bbuild-cmake
+cmake --build build-cmake
+emacs -Q --batch -f batch-byte-compile misc/ninja-mode.el
 }
