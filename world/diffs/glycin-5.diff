--- Arch PKGBUILD
+++ Artix PKGBUILD
@@ -1,14 +1,10 @@
 
-pkgbase=glycin
-pkgname=(
-  glycin
-  glycin-gtk4
-)
-pkgver=2.0.0
-pkgrel=4
+pkgname=glycin
+pkgver=1.2.3
+pkgrel=1
 pkgdesc="Sandboxed and extendable image decoding"
 arch=(x86_64)
-url="https://gitlab.gnome.org/GNOME/glycin"
+url="https://gitlab.gnome.org/sophie-h/glycin"
 license=('MPL-2.0 OR LGPL-2.1-or-later')
 depends=(
   bubblewrap
@@ -17,6 +13,7 @@
   gcc-libs
   glib2
   glibc
+  gtk4
   lcms2
   libjxl
   librsvg
@@ -25,12 +22,14 @@
 makedepends=(
   clang
   git
-  gtk4
   gobject-introspection
   libheif
   meson
   rust
   vala
+)
+optdepends=(
+  'libheif: heif/heic file support'
 )
 checkdepends=(
   dav1d
@@ -38,29 +37,23 @@
   rav1e
   svt-av1
 )
+provides=(
+  libglycin-1.so
+  libglycin-gtk4-1.so
+)
 source=(
-  "git+$url.git#tag=${pkgver/[a-z]/.&}"
+  "git+https://gitlab.gnome.org/sophie-h/glycin.git#tag=${pkgver/[a-z]/.&}"
   "git+https://gitlab.gnome.org/sophie-h/test-images.git"
-  0001-glycin-sandbox-Close-all-unused-FDs-in-fork.patch
 )
-b2sums=('31820d0b77ddc0f9151d033a82cb0b2def318915674983ca8e98f95676ed7c43072594989567fad14fbb2f2b0a9bb4fb2e9077acd62aabd7a49fccd7b9da6163'
-        'SKIP'
-        'ee23f172ab5af259788f16d15f1667f76f47ec5f2bd9450576b5d178aec5fee79836280f24a8318734b034d1d154a3b505c8ff4195c4a6af2ea5b47e4b37181a')
+b2sums=('431b24ef3104d6d1b6b04a9ea975ef5b4dd568765e8c24a493ea8fb171c01751f4376a1480b836491586c7fdc135b63fa455004c223754be3b6630a0db52cdf5'
+        'SKIP')
 
 export CARGO_PROFILE_RELEASE_DEBUG=2 CARGO_PROFILE_RELEASE_STRIP=false
 
 export CARGO_PROFILE_RELEASE_LTO=true CARGO_PROFILE_RELEASE_CODEGEN_UNITS=1
 
 prepare() {
-  cd glycin
-
-  git cherry-pick -n 28005a815e8e6f8869006e5481fd8d77006ec8d1 \
-                     294025c2b01903344513018c00166a35f2e1b3ce \
-                     f202809ba2f5e95696ab03b6c0b16c0875f784a6
-
-  git cherry-pick -n 837721e873ac170deeae23e1186a5ad94450053d
-
-  git apply -3 ../0001-glycin-sandbox-Close-all-unused-FDs-in-fork.patch
+  cd $pkgname
 
   git submodule init
   git submodule set-url tests/test-images "$srcdir/test-images"
@@ -72,57 +65,18 @@
 
 build() {
   local meson_options=(
+    -D test_skip_install=false
   )
 
-  arch-meson glycin build "${meson_options[@]}"
+  artix-meson $pkgname build "${meson_options[@]}"
   meson compile -C build
 }
 
 check() {
-  meson test -C build --print-errorlogs
+  RUST_BACKTRACE=full meson test -v -C build --print-errorlogs --no-rebuild ||:
 }
 
-_pick() {
-  local p="$1" f d; shift
-  for f; do
-    d="$srcdir/$p/${f#$pkgdir/}"
-    mkdir -p "$(dirname "$d")"
-    mv "$f" "$d"
-    rmdir -p --ignore-fail-on-non-empty "$(dirname "$f")"
-  done
+package() {
+  meson install -C build --destdir "$pkgdir" --no-rebuild
 }
 
-package_glycin() {
-  optdepends=(
-    'libheif: Load .avif, .heic and .heif'
-  )
-  provides=(libglycin-2.so)
-
-  meson install -C build --destdir "$pkgdir" --no-rebuild
-
-  cd "$pkgdir"
-  _pick gtk4 usr/include/glycin-gtk4-*
-  _pick gtk4 usr/lib/girepository-1.0/GlyGtk4-*
-  _pick gtk4 usr/lib/libglycin-gtk4-*
-  _pick gtk4 usr/lib/pkgconfig/glycin-gtk4-*
-  _pick gtk4 usr/share/gir-1.0/GlyGtk4-*
-  _pick gtk4 usr/share/vala/vapi/glycin-gtk4-*
-}
-
-package_glycin-gtk4() {
-  pkgdesc+=" - GTK4 integration"
-  depends=(
-    fontconfig
-    gcc-libs
-    glib2
-    glibc
-    glycin
-    gtk4
-    lcms2
-    libseccomp
-  )
-  provides=(libglycin-gtk4-2.so)
-
-  mv gtk4/* "$pkgdir"
-}
-


############# Stripped diff below #################

--- arch_depends
+++ artix_depends
@@ -6,7 +6,6 @@
 git
 glib2
 glibc
-glycin
 gobject-introspection
 gtk4
 lcms2

--- Arch PKGBUILD
+++ Artix PKGBUILD
@@ -1,10 +1,5 @@
 prepare() {
-cd glycin
-git cherry-pick -n 28005a815e8e6f8869006e5481fd8d77006ec8d1 \
-294025c2b01903344513018c00166a35f2e1b3ce \
-f202809ba2f5e95696ab03b6c0b16c0875f784a6
-git cherry-pick -n 837721e873ac170deeae23e1186a5ad94450053d
-git apply -3 ../0001-glycin-sandbox-Close-all-unused-FDs-in-fork.patch
+cd $pkgname
 git submodule init
 git submodule set-url tests/test-images "$srcdir/test-images"
 git -c protocol.file.allow=always -c protocol.allow=never submodule update
@@ -13,7 +8,8 @@
 }
 build() {
 local meson_options=(
+-D test_skip_install=false
 )
-arch-meson glycin build "${meson_options[@]}"
+artix-meson $pkgname build "${meson_options[@]}"
 meson compile -C build
 }
