--- Arch PKGBUILD
+++ Artix PKGBUILD
@@ -1,47 +1,42 @@
 
 pkgname=vulkan-icd-loader
-pkgver=1.4.304.1
-pkgrel=1
+pkgver=1.4.303
+pkgrel=1.1
+arch=(x86_64)
 pkgdesc="Vulkan Installable Client Driver (ICD) Loader"
-url="https://www.vulkan.org/"
-arch=(x86_64)
-license=(Apache-2.0)
+url="https://www.khronos.org/vulkan/"
+license=('Apache-2.0')
+makedepends=('cmake' 'python-lxml' 'libx11' 'libxrandr' 'wayland' 'vulkan-headers')
 depends=(glibc)
-makedepends=(
-  cmake
-  git
-  libx11
-  libxrandr
-  ninja
-  python-lxml
-  vulkan-headers
-  wayland
-)
-optdepends=(
-  'vulkan-driver: packaged vulkan driver'
-)
-provides=(libvulkan.so)
-groups=(vulkan-devel)
-source=("git+https://github.com/KhronosGroup/Vulkan-Loader#tag=vulkan-sdk-$pkgver")
-b2sums=('537e5a325d1833aece5ff69af9b8118934581fbb58d5b1885d2b0d3d55f2ff3ef2db6c3a686c40c9e068c9b80194030cf936cba45fee70f55a6185f6c93ffffd')
+optdepends=('vulkan-driver: packaged vulkan driver') # vulkan-driver: vulkan-intel/vulkan-radeon/nvidia-utils/....
+provides=('libvulkan.so')
+source=("${pkgname}-${pkgver}.tar.gz::https://github.com/KhronosGroup/Vulkan-Loader/archive/v${pkgver}.tar.gz")
+sha256sums=('248a5f7dbf990609f61dac34d19e43f441ccc31fd5ec49b64e807740099057a9')
 
 build() {
-  local cmake_options=(
-    -D CMAKE_BUILD_TYPE=Release
-    -D CMAKE_INSTALL_PREFIX=/usr
-    -D CMAKE_INSTALL_SYSCONFDIR=/etc
-    -D CMAKE_SKIP_INSTALL_RPATH=ON
-  )
+  cd "${srcdir}"/Vulkan-Loader*
 
-  cmake -S Vulkan-Loader -B build -G Ninja "${cmake_options[@]}"
-  cmake --build build
-}
-
-check() {
-  ctest --test-dir build --output-on-failure --stop-on-failure
+  rm -rf build ; mkdir build ; cd build
+  cmake -DCMAKE_INSTALL_PREFIX=/usr \
+    -DVULKAN_HEADERS_INSTALL_DIR=/usr \
+    -DCMAKE_INSTALL_LIBDIR=lib \
+    -DCMAKE_INSTALL_SYSCONFDIR=/etc \
+    -DCMAKE_INSTALL_DATADIR=/share \
+    -DCMAKE_SKIP_RPATH=True \
+    -DBUILD_TESTS=Off \
+    -DBUILD_WSI_XCB_SUPPORT=On \
+    -DBUILD_WSI_XLIB_SUPPORT=On \
+    -DBUILD_WSI_WAYLAND_SUPPORT=On \
+    -DCMAKE_BUILD_TYPE=Release \
+    ..
+  make
 }
 
 package() {
-  DESTDIR="$pkgdir" cmake --install build
+  cd "${srcdir}"/Vulkan-Loader*/build
+
+  make DESTDIR="${pkgdir}" install
+
+  install -dm755 "${pkgdir}"/usr/share/licenses/${pkgname}
+  install -m644 ../LICENSE.txt "${pkgdir}"/usr/share/licenses/${pkgname}/
 }
-


############# Stripped diff below #################

--- arch_depends
+++ artix_depends
@@ -1,9 +1,7 @@
 cmake
-git
 glibc
 libx11
 libxrandr
-ninja
 python-lxml
 vulkan-headers
 wayland

--- Arch PKGBUILD
+++ Artix PKGBUILD
@@ -1,10 +1,17 @@
 build() {
-local cmake_options=(
--D CMAKE_BUILD_TYPE=Release
--D CMAKE_INSTALL_PREFIX=/usr
--D CMAKE_INSTALL_SYSCONFDIR=/etc
--D CMAKE_SKIP_INSTALL_RPATH=ON
-)
-cmake -S Vulkan-Loader -B build -G Ninja "${cmake_options[@]}"
-cmake --build build
+cd "${srcdir}"/Vulkan-Loader*
+rm -rf build ; mkdir build ; cd build
+cmake -DCMAKE_INSTALL_PREFIX=/usr \
+-DVULKAN_HEADERS_INSTALL_DIR=/usr \
+-DCMAKE_INSTALL_LIBDIR=lib \
+-DCMAKE_INSTALL_SYSCONFDIR=/etc \
+-DCMAKE_INSTALL_DATADIR=/share \
+-DCMAKE_SKIP_RPATH=True \
+-DBUILD_TESTS=Off \
+-DBUILD_WSI_XCB_SUPPORT=On \
+-DBUILD_WSI_XLIB_SUPPORT=On \
+-DBUILD_WSI_WAYLAND_SUPPORT=On \
+-DCMAKE_BUILD_TYPE=Release \
+..
+make
 }
