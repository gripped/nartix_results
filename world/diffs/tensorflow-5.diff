--- Arch PKGBUILD
+++ Artix PKGBUILD
@@ -3,7 +3,7 @@
 pkgname=(tensorflow tensorflow-opt tensorflow-cuda tensorflow-opt-cuda python-tensorflow python-tensorflow-opt python-tensorflow-cuda python-tensorflow-opt-cuda)
 pkgver=2.18.0
 _pkgver=2.18.0
-pkgrel=9
+pkgrel=2
 pkgdesc="Library for computation using data flow graphs for scalable machine learning"
 url="https://www.tensorflow.org/"
 license=('APACHE')
@@ -14,38 +14,18 @@
              'python-installer' 'patchelf' 'libxcrypt-compat' 'clang' 'lld')
 optdepends=('tensorboard: Tensorflow visualization toolkit')
 source=("$pkgname-$pkgver.tar.gz::https://github.com/tensorflow/tensorflow/archive/v${_pkgver}.tar.gz"
-        https://github.com/tensorflow/tensorflow/commit/8ca77eb4bee16d6efe9a2cfda12ede448eb7bc72.patch
-        https://github.com/tensorflow/tensorflow/commit/521421ea776003c21b9db6caeec1af7258f7e52e.patch
-        https://github.com/tensorflow/tensorflow/commit/37c02230d750b1b593c498a2aaaec59b1875585c.patch
-        https://github.com/tensorflow/tensorflow/commit/7ede78237dfbc5ddef63b01ddda6f6bad2458710.patch
-        https://github.com/tensorflow/tensorflow/commit/8a0fbdaebc6209f6b90a8d9cfc83055253d69d1e.patch
+        tensorflow-newer-hermetic-nvidia-versions.patch
         https://github.com/tensorflow/tensorflow/commit/3f4b2fda6ffe7dfe03c1663ef37f54fc4432cc8b.patch
-        https://github.com/tensorflow/tensorflow/commit/846468dd25153e9a41f0a9da1ba1604ce819628d.patch
-        tensorflow-fix-cuda-path.patch
         tensorflow-2.16.1-python-distutils-removal.patch
-        tensorflow-2.18.0-cuda-12.8.patch
-        tensorflow-2.18.0-clang19-compat.patch
-        tensorflow-2.18.0-python-3.13-API.patch
-        tensorflow-2.18.0-add-python-3.13-requirements-lock-file.patch
         https://github.com/bazelbuild/bazel/releases/download/6.5.0/bazel_nojdk-6.5.0-linux-x86_64)
 sha512sums=('177decaafcdef27afee84a17268f473141d2d0c092d5f3fe33c9cdd3ce4fd52f6b4b83bc41b4b005c8889f5e65602a57ae3eba8f63e0c527feaf83917453f4e6'
-            'c4f47c8755412bf07b8b7aabcc78d2138d3ec76e9f0d8a75b58e8d44ea2a396f2390e3f59cb2cf64fb891fc2d362718a3e742fd0364a6b2c0a19c443bd14cc62'
-            'ebfa2d22e22115db9d8aaae1447e3d4282c405b3cfccd64061be830216d2b61d8a22586486b4ffb5ad56a0dc7a18f180709a6bfac2ba56f26d31556085698261'
-            'b2cd26c18ae91ab64b33fa1596c23b074aa5b0c5e0e1c3673c445d1ff9034ded27fc3c733011228c84cb8a4cb26baea0e0ed76a71f77b76cc4b685f9149f7044'
-            'fd7d98f82e51836c9478e13af784feb889431469ac742d10943af60406122fc0ece90af7f7997087510f7903333f731afc94a7b2d835df50e0e3353b02dbd258'
-            '8902529804e83b2c26f0b0b6c94a66c59b6e7db52e2aaaf0c718783625a243fb913436921718d2328cf2c8b9bd348bfc0dfebe58e6731f5e51b49986f4cbb157'
+            '4c2780d69d72c8794aad252a96b21ab81d4e24cb9c6a4b89ff24f0627c7e96b58bec27e59725ef77d6673665faebcb0e958e4dd9406704899ba12fa8d313929e'
             '03e8d7188a81cc237899f4f287f129e7759d268f604252636e007e1ffe71b6a07926c219f79b5bf1f8c088345e292eff461d2375ca1a73af435cdca182e9c26c'
-            '9fb2afd75da422a930ccd10d17c3230485fb877800ea1ca246cba76bc1a70d8a196ca4361557fb4a41c12fd844fa31dd761db14ba45f400b0bb3d4d2d70d3bec'
-            '3d3c7aa4faa963594b71935dbd292a872a2958ffeaa6d3d84bc95d262f345c9af95d360b671a445e97bee9d163555d0d68fdb81830eca9ba7da2b40746f5813f'
             'e4c44d2f5314b83d8ed404e5ec14960ef8b7df0c1a2a3e826f913a02c901f9fd0326f9014a602121e0fdb2f928d1459f8b8180455491a1f937ce84e12f6a7d3e'
-            'e561bd4198658a2c8b33ef59992d5d78838e2d5b937e4e49eca836d26e0d243fad42dfc9f5b106cb39ce9945e7afa23589f0d93ec002c79ce887ad2b3c473ebc'
-            'd17893b4fc56960d7d4a6a8cd906186018045f103a6712b45a0cdb238ec3e5c9c51e233db24d79918f5991884858f4ac5feabd55c6e7279047afe10549b8d09f'
-            'a9aaee9a8b98438ea78808634a491ab5f52e230cef6c80c1f2ea26e7ed32159b398420632d2ce3c8291b23158ef94503c2e162c26fa50a6cdf6bb2a750ca2b62'
-            '8d291ca4c26f1f861ed6806bdd7ae5a49cd0ec1115402877b9100b15940c3aedca1af7565b925d867fe3bbb0a7e914de31ca9eb685e4bef927fcfba5edb7f82c'
             'd3789f0ecd354468f2e24d98501041430ae99c173320fa9c3eb02f225c08ed298fd1ad259e4ad9bb70b6ae89d84cd87460aaa720de3486d40b30777a8fe45453')
 
 _common_py_depends=(python-termcolor python-astor python-gast python-numpy python-protobuf absl-py
-                    python-h5py python-keras python-opt_einsum python-wrapt
+                    python-h5py python-keras python-tensorflow-estimator python-opt_einsum
                     python-astunparse python-pasta python-flatbuffers python-typing_extensions python-ml-dtypes)
 
 get_pyver () {
@@ -76,25 +56,11 @@
   export PATH="${srcdir}/bazel:$PATH"
   bazel --version
 
-  patch -Np1 -i ../8ca77eb4bee16d6efe9a2cfda12ede448eb7bc72.patch -d tensorflow-${_pkgver}
-  patch -Np1 -i ../521421ea776003c21b9db6caeec1af7258f7e52e.patch -d tensorflow-${_pkgver}
-  patch -Np1 -i ../37c02230d750b1b593c498a2aaaec59b1875585c.patch -d tensorflow-${_pkgver}
-  patch -Np1 -i ../7ede78237dfbc5ddef63b01ddda6f6bad2458710.patch -d tensorflow-${_pkgver}
-  patch -Np1 -i ../8a0fbdaebc6209f6b90a8d9cfc83055253d69d1e.patch -d tensorflow-${_pkgver}
+  patch -Np1 -i ../tensorflow-newer-hermetic-nvidia-versions.patch -d tensorflow-${_pkgver}
 
   patch -Np1 -i ../3f4b2fda6ffe7dfe03c1663ef37f54fc4432cc8b.patch -d tensorflow-${_pkgver}
 
-  patch -Np1 -i ../tensorflow-fix-cuda-path.patch -d tensorflow-${_pkgver}
-
   patch -Np1 -i ../tensorflow-2.16.1-python-distutils-removal.patch -d tensorflow-${_pkgver}
-
-  patch -Np1 -i ../tensorflow-2.18.0-cuda-12.8.patch -d tensorflow-${_pkgver}
-
-  patch -Np1 -i ../tensorflow-2.18.0-clang19-compat.patch -d tensorflow-${_pkgver}
-
-  patch -Np1 -i ../846468dd25153e9a41f0a9da1ba1604ce819628d.patch -d tensorflow-${_pkgver}
-  patch -Np1 -i ../tensorflow-2.18.0-python-3.13-API.patch -d tensorflow-${_pkgver}
-  patch -Np1 -i ../tensorflow-2.18.0-add-python-3.13-requirements-lock-file.patch -d tensorflow-${_pkgver}
 
   sed -i -E "s/'([0-9a-z_-]+) .= [0-9].+[0-9]'/'\1'/" tensorflow-${_pkgver}/tensorflow/tools/pip_package/setup.py
 
@@ -137,12 +103,12 @@
   export TF_CUDA_PATHS=/opt/cuda,/usr/lib,/usr
   export HERMETIC_CUDA_VERSION=$(/opt/cuda/bin/nvcc --version | sed -n 's/\(release [^.]\+.[^.]\+\),/\1.0,/;s/^.*release \(.*\),.*/\1/p')
   export HERMETIC_CUDNN_VERSION="$(sed -n 's/^#define CUDNN_MAJOR\s*\(.*\).*/\1/p' /usr/include/cudnn_version.h).$(sed -n 's/^#define CUDNN_MINOR\s*\(.*\).*/\1/p' /usr/include/cudnn_version.h).$(sed -n 's/^#define CUDNN_PATCHLEVEL\s*\(.*\).*/\1/p' /usr/include/cudnn_version.h)"
-  export HERMETIC_CUDA_COMPUTE_CAPABILITIES=sm_52,sm_53,sm_60,sm_61,sm_62,sm_70,sm_72,sm_75,sm_80,sm_86,sm_87,sm_89,sm_90,sm_90a,sm_100,sm_100a,sm_101,sm_101a,sm_120,sm_120a,compute_120
+  export HERMETIC_CUDA_COMPUTE_CAPABILITIES=sm_52,sm_53,sm_60,sm_61,sm_62,sm_70,sm_72,sm_75,sm_80,sm_86,sm_87,sm_89,sm_90,compute_90
   export TF_PYTHON_VERSION=$(get_pyver)
   export PYTHON_BIN_PATH=/usr/bin/python$(get_pyver)
   export USE_DEFAULT_PYTHON_LIB_PATH=1
 
-  export BAZEL_ARGS="-c opt --verbose_failures --config=verbose_logs --copt=-Wno-c23-extensions"
+  export BAZEL_ARGS="-c opt --verbose_failures --config=verbose_logs --copt=-Wno-gnu-offsetof-extensions"
 }
 
 build() {
@@ -163,7 +129,7 @@
 
   echo "Building with cuda and with non-x86-64 optimizations"
   cd "${srcdir}"/tensorflow-${_pkgver}-opt-cuda
-  export CC_OPT_FLAGS="-march=x86-64-v3 -O2"
+  export CC_OPT_FLAGS="-march=haswell -O2"
   export TF_NEED_CUDA=1
   ./configure
   bazel \
@@ -193,7 +159,7 @@
 
   echo "Building without cuda and with non-x86-64 optimizations"
   cd "${srcdir}"/tensorflow-${_pkgver}-opt
-  export CC_OPT_FLAGS="-march=x86-64-v3 -O2"
+  export CC_OPT_FLAGS="-march=haswell -O2"
   export TF_NEED_CUDA=0
   ./configure
   bazel \


############# Stripped diff below #################

--- arch_depends
+++ artix_depends
@@ -33,9 +33,9 @@
 python-pasta
 python-protobuf
 python-pycuda
+python-tensorflow-estimator
 python-termcolor
 python-typing_extensions
-python-wrapt
 tensorflow
 tensorflow-cuda
 tensorflow-opt

--- Arch PKGBUILD
+++ Artix PKGBUILD
@@ -2,19 +2,9 @@
 install -Dm755 "${srcdir}"/bazel_nojdk-6.5.0-linux-x86_64 bazel/bazel
 export PATH="${srcdir}/bazel:$PATH"
 bazel --version
-patch -Np1 -i ../8ca77eb4bee16d6efe9a2cfda12ede448eb7bc72.patch -d tensorflow-${_pkgver}
-patch -Np1 -i ../521421ea776003c21b9db6caeec1af7258f7e52e.patch -d tensorflow-${_pkgver}
-patch -Np1 -i ../37c02230d750b1b593c498a2aaaec59b1875585c.patch -d tensorflow-${_pkgver}
-patch -Np1 -i ../7ede78237dfbc5ddef63b01ddda6f6bad2458710.patch -d tensorflow-${_pkgver}
-patch -Np1 -i ../8a0fbdaebc6209f6b90a8d9cfc83055253d69d1e.patch -d tensorflow-${_pkgver}
+patch -Np1 -i ../tensorflow-newer-hermetic-nvidia-versions.patch -d tensorflow-${_pkgver}
 patch -Np1 -i ../3f4b2fda6ffe7dfe03c1663ef37f54fc4432cc8b.patch -d tensorflow-${_pkgver}
-patch -Np1 -i ../tensorflow-fix-cuda-path.patch -d tensorflow-${_pkgver}
 patch -Np1 -i ../tensorflow-2.16.1-python-distutils-removal.patch -d tensorflow-${_pkgver}
-patch -Np1 -i ../tensorflow-2.18.0-cuda-12.8.patch -d tensorflow-${_pkgver}
-patch -Np1 -i ../tensorflow-2.18.0-clang19-compat.patch -d tensorflow-${_pkgver}
-patch -Np1 -i ../846468dd25153e9a41f0a9da1ba1604ce819628d.patch -d tensorflow-${_pkgver}
-patch -Np1 -i ../tensorflow-2.18.0-python-3.13-API.patch -d tensorflow-${_pkgver}
-patch -Np1 -i ../tensorflow-2.18.0-add-python-3.13-requirements-lock-file.patch -d tensorflow-${_pkgver}
 sed -i -E "s/'([0-9a-z_-]+) .= [0-9].+[0-9]'/'\1'/" tensorflow-${_pkgver}/tensorflow/tools/pip_package/setup.py
 sed -i "/set_cuda_local_path(environ_cp, '/d" tensorflow-${_pkgver}/configure.py
 cp -r tensorflow-${_pkgver} tensorflow-${_pkgver}-opt
@@ -53,11 +43,11 @@
 export TF_CUDA_PATHS=/opt/cuda,/usr/lib,/usr
 export HERMETIC_CUDA_VERSION=$(/opt/cuda/bin/nvcc --version | sed -n 's/\(release [^.]\+.[^.]\+\),/\1.0,/;s/^.*release \(.*\),.*/\1/p')
 export HERMETIC_CUDNN_VERSION="$(sed -n 's/^#define CUDNN_MAJOR\s*\(.*\).*/\1/p' /usr/include/cudnn_version.h).$(sed -n 's/^#define CUDNN_MINOR\s*\(.*\).*/\1/p' /usr/include/cudnn_version.h).$(sed -n 's/^#define CUDNN_PATCHLEVEL\s*\(.*\).*/\1/p' /usr/include/cudnn_version.h)"
-export HERMETIC_CUDA_COMPUTE_CAPABILITIES=sm_52,sm_53,sm_60,sm_61,sm_62,sm_70,sm_72,sm_75,sm_80,sm_86,sm_87,sm_89,sm_90,sm_90a,sm_100,sm_100a,sm_101,sm_101a,sm_120,sm_120a,compute_120
+export HERMETIC_CUDA_COMPUTE_CAPABILITIES=sm_52,sm_53,sm_60,sm_61,sm_62,sm_70,sm_72,sm_75,sm_80,sm_86,sm_87,sm_89,sm_90,compute_90
 export TF_PYTHON_VERSION=$(get_pyver)
 export PYTHON_BIN_PATH=/usr/bin/python$(get_pyver)
 export USE_DEFAULT_PYTHON_LIB_PATH=1
-export BAZEL_ARGS="-c opt --verbose_failures --config=verbose_logs --copt=-Wno-c23-extensions"
+export BAZEL_ARGS="-c opt --verbose_failures --config=verbose_logs --copt=-Wno-gnu-offsetof-extensions"
 }
 build() {
 echo "Building with cuda and without non-x86-64 optimizations"
@@ -75,7 +65,7 @@
 //tensorflow/tools/pip_package:wheel --repo_env=WHEEL_NAME=tensorflow
 echo "Building with cuda and with non-x86-64 optimizations"
 cd "${srcdir}"/tensorflow-${_pkgver}-opt-cuda
-export CC_OPT_FLAGS="-march=x86-64-v3 -O2"
+export CC_OPT_FLAGS="-march=haswell -O2"
 export TF_NEED_CUDA=1
 ./configure
 bazel \
@@ -101,7 +91,7 @@
 //tensorflow/tools/pip_package:wheel --repo_env=WHEEL_NAME=tensorflow_cpu
 echo "Building without cuda and with non-x86-64 optimizations"
 cd "${srcdir}"/tensorflow-${_pkgver}-opt
-export CC_OPT_FLAGS="-march=x86-64-v3 -O2"
+export CC_OPT_FLAGS="-march=haswell -O2"
 export TF_NEED_CUDA=0
 ./configure
 bazel \
